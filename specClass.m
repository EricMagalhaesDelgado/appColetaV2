classdef specClass

    properties
        ID            {mustBeNumeric}

        Task          = ''

        Observation   = struct('Created',   '', ...                         % DATESTRING: '24/02/2023 14:00:00'
                               'BeginTime', '', ...                         % DATETIME
                               'EndTime',   '')                             % DATETIME

        Receiver      =   struct('Name',       '', ...
                                 'Type',       '', ...
                                 'Parameters', '', ...
                                 'Handle',     [], ...
                                 'SCPI', struct('ResetMode',       '', ...
                                                'SyncMode',        '', ...
                                                'scpiSet_Reset',   '', ...
                                                'scpiSet_Startup', '', ...
                                                'scpiSet_Att',     '', ...
                                                'scpiGet_Att',     '', ...
                                                'scpiGet_Data',    ''))

        udpPort       = struct('Source',     '', ...                        % 'EB500' | 'Logger' | 'ERMx_1' | 'ERMx_2'
                               'Parameters', [], ...                        % Port and timeout (json)
                               'Handle',     [])

        GPS           = struct('Name',       '', ...
                               'Type',       '', ...
                               'Parameters', '', ...
                               'Handle',     [])
        
        AntennaSwitch = struct('Name',       '', ...                        % 'MSAT' | 'ETM'
                               'Type',       '', ...                        % 'TCPIP SOCKET' | ''
                               'Parameters', '', ...                        % json com campos IP e Port | ''
                               'Handle',     [])                            % TCPIP OBJECT | []

        Band          = struct('scpiSet_Config', '',               ...
                               'Antenna', struct('Name',      '',  ...
                                                 'Height',    [],  ...
                                                 'Azimuth',   [],  ...
                                                 'Elevation', []), ...
                               'Datagrams',   [], ...
                               'DataPoints',  [], ...
                               'SyncModeRef', [], ...
                               'Mask',        [], ...
                               'Matrix',      [], ...
                               'File', struct('Filename',        '', ...
                                              'Filecount',       [], ...
                                              'AlocatedSamples', [], ...
                                              'WritedSamples',   [], ...
                                              'Handle',          []))

        Status        = ''                                                  % 'Na fila...' | 'Em andamento...' | 'Conclu√≠da' | 'Cancelada' | 'Erro'

        LOG           = struct('time', {}, ...
                               'msg',  {})

    end


    methods

        function [specObj, idx] = Fcn_AddTask(specObj)

            if isempty([specObj.ID]); idx = 1;
            else;                     idx = numel(specObj)+1;
            end

            specObj(idx).ID = idx;
            specObj(idx).Observation.Created = datestr(now, 'dd/mm/yyyy HH:MM:SS');

        end

        function specObj = Fcn_DelTask(specObj, idx)

            if (idx <= numel(specObj)) & (numel([specObj.ID]) > 1)
                specObj(idx) = [];

                for ii = 1:numel(specObj)
                    specObj(ii).ID = ii;
                end
            end

        end

    end
end