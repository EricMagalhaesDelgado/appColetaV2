function htmlCode = metadataPanel(app)

    ii = app.Table.Selection;
    jj = app.Tree.SelectedNodes.NodeData;

    Task   = app.specObj(ii).Task;
    Script = Task.Script;
    
    d = metadataPanel_Dict;
    [observationType, observationSamples, StepWidth, receiverRevisitTime, gpsRevisitTime] = metadataPanel_ViewForm(app, ii, jj);
    
    taskMetaData = struct('group', 'TAREFA', ...
                          'value', struct('Type',          Task.Type, ...
                                          'Observation',   observationType, ...
                                          'BitsPerSample', sprintf('%d bits', Script.BitsPerSample), ...
                                          'Receiver',      app.specObj(ii).hReceiver.UserData.IDN, ...
                                          'gpsType',       Script.GPS.Type));
    
    taskMetaData(2).group = 'RECEPTOR';
    taskMetaData(2).value = struct('StepWidth',         StepWidth, ...
                                   'DataPoints',        Script.Band(jj).instrDataPoints, ...
                                   'Resolution',        Script.Band(jj).instrResolution, ...
                                   'Detector',          Script.Band(jj).instrDetector, ...
                                   'TraceMode',         Script.Band(jj).TraceMode, ...
                                   'IntegrationFactor', Script.Band(jj).IntegrationFactor);
    
    taskMetaData(3).group = 'ANTENA';
    taskMetaData(3).value = jsondecode(app.specObj(ii).Band(jj).Antenna);

    taskMetaData(4).group = 'TEMPO DE REVISITA';
    taskMetaData(4).value = struct('Receiver',          receiverRevisitTime, ...
                                   'GPS',               gpsRevisitTime);

    taskMetaData(5).group = 'OUTROS ASPECTOS';
    taskMetaData(5).value = struct('Description',        Script.Band(jj).Description, ...
                                   'ObservationSamples', observationSamples);
    
    htmlCode = '<font style="font-family: Helvetica; font-size: 10px;">';
    for ii = 1:numel(taskMetaData)
        htmlCode = sprintf('%s<b>%s</b>', htmlCode, taskMetaData(ii).group);
        
        structFields = fields(taskMetaData(ii).value);    
        for jj = 1:numel(structFields)
            Field = structFields{jj};
            Value = taskMetaData(ii).value.(Field);
            if isnumeric(Value)
                Value = string(Value);
            end
    
            if isKey(d, Field)
                Field = d(Field);
            end
            
            htmlCode = sprintf('%s\n• <span style="color: #808080;">%s:</span> %s', htmlCode, Field, Value);
        end
        htmlCode = sprintf('%s\n\n', htmlCode);
    end
    htmlCode = replace(sprintf('%s</font>', strtrim(htmlCode)), newline, '<br>');
end


%-------------------------------------------------------------------------%
function d = metadataPanel_Dict()
    names  = ["Type", ...
              "taskType", ...
              "BitsPerSample", ...
              "Observation", ...
              "ObservationType", ...
              "ObservationSamples", ...
              "RevisitTime", ...
              "Description", ...
              "StepWidth", ...
              "DataPoints", ...
              "Resolution", ...
              "TraceMode", ...
              "IntegrationFactor", ...
              "gpsType", ...
              "Receiver", ...
              "Name", ...
              "Installation", ...
              "Target", ...
              "Height", ...
              "Azimuth", ...
              "Elevation", ...
              "Polarization"];
    values = ["Tipo", ...
              "Tipo de tarefa", ...
              "Codificação", ...
              "Observação", ...
              "Tipo de observação", ...
              "Amostras a coletar", ...
              "Tempo de revisita", ...
              "Descrição", ...
              "Passo de varredura", ...
              "Pontos por varredura", ...
              "Resolução", ...
              "Traço", ...
              "Integração", ...
              "GPS", ...
              "Receptor", ...
              "Nome", ...
              "Instalação", ...
              "Alvo", ...
              "Altura", ...
              "Azimute", ...
              "Elevação", ...
              "Polarização"];

    d = dictionary(names, values);
end


%-------------------------------------------------------------------------%
function [observationType, observationSamples, StepWidth, receiverRevisitTime, gpsRevisitTime] = metadataPanel_ViewForm(app, ii, jj)
    Task   = app.specObj(ii).Task;
    Script = Task.Script;

    % ObservationType
    switch Script.Observation.Type
        case "Duration"; observationType = "Duração específica";
        case "Samples";  observationType = "Quantidade específica de amostras";
        case "Time";     observationType = "Período específico";
    end

    % ObservationSamples
    if observationType == "Quantidade específica de amostras"
        observationSamples = Script.Band(jj).ObservationSamples;
    else
        observationSamples = -1;
    end

    % StepWidth
    if isnumeric(Script.Band(jj).instrStepWidth)
        StepWidth = sprintf('%.3f kHz', Script.Band(jj).instrStepWidth/1e+3);
    else
        StepWidth = Script.Band(jj).instrStepWidth;
    end
    
    % Receiver RevisitTime
    receiverRevisitTime = sprintf('%.3f seg', Script.Band(jj).RevisitTime);
    try
        if app.revisitObj.Band(ii).RevisitFactors(jj+1) ~= -1
            receiverRevisitTime = sprintf('%.3f → %.3f seg (norm)', Script.Band(jj).RevisitTime, ...
                                                                    app.revisitObj.GlobalRevisitTime * app.revisitObj.Band(ii).RevisitFactors(jj+1));
        end
    catch
    end
       
    % GPS RevisitTime
    if ~isempty(Script.GPS.RevisitTime)
        gpsRevisitTime = sprintf('%.3f seg', Script.GPS.RevisitTime);

        try
            if app.revisitObj.Band(ii).RevisitFactors(1) ~= -1
                gpsRevisitTime = sprintf('%.3f → %.3f seg (norm)', Script.GPS.RevisitTime, ...
                                                                   app.revisitObj.GlobalRevisitTime * app.revisitObj.Band(ii).RevisitFactors(1));
            end
        catch
        end
    else
        gpsRevisitTime = 'NA';
    end
end